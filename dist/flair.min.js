/**
 * flair.min.js
 * True Object Oriented JavaScript
 * Version 0.15.5
 * (c) 2017-2019 Vikas Burman
 * MIT
 */
(function(){const def=(opts=null)=>{let isServer=new Function("try {return this===global;}catch(e){return false;}")(),getGlobal=new Function("try {return (this===global ? global : window);}catch(e){return window;}");"string"==typeof opts&&(opts={symbols:opts.split(",").map(item=>item.trim())});let flair={},noop=()=>{},sym=opts.symbols||[],noopAsync=(resolve,reject)=>{resolve()},options=Object.freeze({symbols:Object.freeze(sym),env:Object.freeze({type:opts.env||(isServer?"server":"client"),isServer:isServer,isClient:!isServer,isProd:sym.indexOf("PROD")!==-1,isDebug:sym.indexOf("DEBUG")!==-1,global:getGlobal(),supressGlobals:"undefined"!=typeof opts.supressGlobals&&opts.supressGlobals,args:isServer?process.argv:new URLSearchParams(location.search)}),loaders:Object.freeze({module:Object.freeze({server:opts.moduleLoaderServer||null,client:opts.moduleLoaderClient||null}),file:Object.freeze({server:opts.fileLoaderServer||null,client:opts.fileLoaderClient||null}),define:(type,fn)=>{let loaderOverrides=flair.options.loaderOverrides;switch(type){case"sm":loaderOverrides.moduleLoaderServer=loaderOverrides.moduleLoaderServer||fn;break;case"cm":loaderOverrides.moduleLoaderClient=loaderOverrides.moduleLoaderClient||fn;break;case"sf":loaderOverrides.fileLoaderServer=loaderOverrides.fileLoaderServer||fn;break;case"cf":loaderOverrides.fileLoaderClient=loaderOverrides.fileLoaderClient||fn}}}),loaderOverrides:{moduleLoaderServer:null,moduleLoaderClient:null,fileLoaderServer:null,fileLoaderClient:null}});if(options.env.isProd&&options.env.isDebug)throw`DEBUG and PROD symbols are mutually exclusive. Use only one.`;flair._=Object.freeze({name:"FlairJS",version:"0.15.5",copyright:"(c) 2017-2019 Vikas Burman",license:"MIT",lupdate:new Date("Mon, 14 Jan 2019 23:14:20 GMT")}),flair.options=options,flair.Exception=function(code,msg,error){let _ex=this;return this.code=code||"",this.message=msg||"",this.error=error||null,Object.freeze(_ex)};let asmFiles={},asmTypes={};flair.Assembly=(()=>{}),flair.Assembly.register=((...ados)=>{
//      "copyright": "",
//      "license": "",
//      "types": ["", "", ...]
// }
for(let asm of ados)if("object"==typeof asm&&!Array.isArray(asm.type)){if(asmFiles[asm.file])throw`Assembly ${asm.file} already registered.`;asmFiles[asm.file]={ado:asm,status:"not-loaded"};for(let type of asm.types){if(asmTypes[type])throw`Type ${type} already registered.`;asmTypes[type]=asm.file}}}),flair.Assembly.isRegistered=(file=>{return"undefined"!=typeof asmFiles[file]}),flair.Assembly.load=(file=>{if(flair.Assembly.isRegistered(file))return new Promise((resolve,reject)=>{if("loaded"===asmFiles[file])resolve();else if(isServer)try{require(file),asmFiles[file].status="loaded",resolve()}catch(e){reject(e)}else{const script=document.createElement("script");script.onload=(()=>{asmFiles[file].status="loaded",resolve()}),script.onerror=(e=>{reject(e)}),script.async=!0,script.src=file,document.body.appendChild(script)}});throw`Assembly ${file} must be registered first.`}),flair.Assembly.isLoaded=(file=>{return"undefined"!=typeof asmFiles[file]&&"loaded"===asmFiles[file].status}),flair.Assembly.get=(type=>{return asmTypes[type]||""}),flair.Namespace=(Type=>{if(["class","enum","interface","mixin","resource","structure"].indexOf(Type._.type)===-1)throw`Type (${Type._.type}) cannot be placed in a namespace.`;if(Type._.namespace)throw`Type (${Type._.name}) is already contained in a namespace.`;let isForced=!1;Type._.name.startsWith("~")&&(Type._.name=Type._.name.substr(1),isForced=!0);let nextLevel=flair.Namespace.root,nm=Type._.name,nsName="",ns=nm.substr(0,nm.lastIndexOf("."));if(nm=nm.substr(nm.lastIndexOf(".")+1),ns){nsList=ns.split(".");for(nsItem of nsList)if(nsItem){if("_"===nsItem)throw`Special name "_" is used as namespace in ${Type._.name}.`;if(nextLevel[nsItem]=nextLevel[nsItem]||{},nsName=nsItem,nextLevel[nsItem]._&&"namespace"!==nextLevel[nsItem]._.type)throw`${Type._.name} cannot be contained in another type (${nextLevel[nsItem]._.name})`;nextLevel=nextLevel[nsItem]}}else if(!isForced)return;if(nextLevel[nm])throw`Type ${nm} already contained at ${ns}.`;nextLevel[nm]=Type,Type._.namespace=nextLevel,nextLevel._=nextLevel._||{},nextLevel._.name=nextLevel._.name||nsName,nextLevel._.type=nextLevel._.type||"namespace",nextLevel._.types=nextLevel._.types||[],nextLevel._.types.push(Type);let getTypes=()=>{return nextLevel._.types.slice()},getType=qualifiedName=>{let _Type=null,level=nextLevel;if(qualifiedName.indexOf(".")!==-1){let items=qualifiedName.split(".");for(item of items)if(item){if("_"===item)throw`Special name "_" is used as name in ${qualifiedName}.`;if(level=level[item],!level)break}_Type=level}else _Type=level[qualifiedName];return _Type&&_Type._&&["class","enum","interface","mixin","resource","structure"].indexOf(_Type._.type)!==-1?_Type:null},createInstance=(qualifiedName,...args)=>{let _Type=nextLevel.getType(qualifiedName);if(_Type&&"class"!=_Type._.type)throw`${name} is not a class.`;return _Type?new _Type(...args):null};nextLevel.getTypes=nextLevel.getTypes||getTypes,nextLevel.getType=nextLevel.getType||getType,nextLevel.createInstance=nextLevel.createInstance||createInstance}),flair.Namespace.root={},flair.Namespace.getType=(qualifiedName=>{return flair.Namespace.root.getType?flair.Namespace.root.getType(qualifiedName):null}),flair.Namespace.getTypes=(()=>{return flair.Namespace.root.getTypes?flair.Namespace.root.getTypes():[]}),flair.Namespace.createInstance=((qualifiedName,...args)=>{return flair.Namespace.root.createInstance?flair.Namespace.root.createInstance(qualifiedName,...args):null}),flair.Class=((arg1,arg2,arg3,arg4)=>{let className=arg1,inherits=null,mixins=[],interfaces=[],factory=null;"function"==typeof arg3?(factory=arg3,Array.isArray(arg2)?mixins=arg2:inherits=arg2):"function"==typeof arg4?(inherits=arg2,mixins=arg3,factory=arg4):"function"==typeof arg2&&(factory=arg2);let onlyMixins=[];for(let mixin of mixins)switch(mixin._.type){case"mixin":onlyMixins.push(mixin);break;case"interface":interfaces.push(mixin)}mixins=onlyMixins;let Class=function(_flag,_static,...args){let Parent=Class._.inherits,_this={},_exposed_this={},singleInstance=null,bucket=[],meta={},props={},events=[],classArgs=[],isNeedProtected=!1,staticInterface=null,theFlag="__flag__",mixin_being_applied=null;if(singleInstance=Class._.singleInstance())return singleInstance;if(_flag&&_flag===theFlag?(staticInterface=_static,isNeedProtected=!0,classArgs=args):(staticInterface=Class._.static,"undefined"!=typeof _flag?(classArgs=classArgs.concat([_flag]),"undefined"!=typeof _static&&(classArgs=classArgs.concat([_static]),"undefined"!=typeof args&&(classArgs=classArgs.concat(args)))):classArgs=args),Parent&&(_this=new Parent(theFlag,staticInterface,...classArgs),Parent._.isSealed()||Parent._.isSingleton()))throw`${className} cannot inherit from a sealed/singleton class ${Parent._.name}.`;const guid=()=>{return"_xxxxxxxx_xxxx_4xxx_yxxx_xxxxxxxxxxxx".replace(/[xy]/g,c=>{var r=16*Math.random()|0,v="x"==c?r:3&r|8;return v.toString(16)})},isSingletonClass=()=>{return hasAttr("singleton",meta._constructor)},isAbstractClass=()=>{return hasAttr("abstract",meta._constructor)},isSpecialMember=member=>{return["constructor","dispose","_constructor","_dispose","_"].indexOf(member)!==-1},isOwnMember=member=>{return"undefined"!=typeof meta[member]},isDerivedMember=member=>{return!isOwnMember(member)&&_this._.instanceOf.findIndex(item=>{return!!item.meta[member]})!==-1},memberType=member=>{let result="";if("undefined"!=typeof meta[member])result=meta[member].type;else for(let instance of _this._.instanceOf)if(instance.meta[member]){result=instance.meta[member].type;break}return result},isSealedMember=member=>{return hasAttr("sealed",meta[member])},isStaticMember=member=>{return hasAttr("static",meta[member])},isPrivateMember=member=>{return hasAttr("private",meta[member])},isHiddenMember=member=>{return hasAttr("hide",meta[member])},isProtectedMember=member=>{return hasAttrEx("protected",member)},isSerializableMember=member=>{return hasAttrEx("serialize",member)},isConditionalMemberOK=member=>{let isOK=!0,_meta=meta[member],condition="";if(_meta)for(let item of _meta)if("conditional"===item.name){switch(isOK=!1,condition=item.args&&item.args.length>0?item.args[0]:""){case"server":isOK=options.env.isServer===!0;break;case"client":isOK=options.env.isServer===!1;break;default:isOK=options.symbols.indexOf(condition)!==-1}break}return isOK},doCopy=member=>{Object.defineProperty(_exposed_this,member,Object.getOwnPropertyDescriptor(_this,member))},isArrowFunction=fn=>{return!fn.hasOwnProperty("prototype")},attr=(attrName,...args)=>{let Attr=null;"string"==typeof attrName?Attr=flair.Container.get(attrName)[0]:(Attr=attrName,attrName=Attr._.name),bucket.push({name:attrName,Attr:Attr,args:args})},getAttrArgs=(attrName,member)=>{let attrArgs=null;for(let item of _this._.instanceOf)if(item.meta[member]){for(let attrItem of item.meta[member])if(attrItem.name===attrName){attrArgs=attrItem.args;break}if(attrArgs)break}return null!==attrArgs?attrArgs:[]},applyAttr=targetName=>{let Attr=null,targetType=meta[targetName].type,attrArgs=null,attrInstance=null,decorator=null;for(let info of meta[targetName])if(Attr=info.Attr,Attr&&(attrArgs=info.args||[],attrInstance=new Attr(...attrArgs),decorator=attrInstance.decorator(),"function"==typeof decorator)){let descriptor=Object.getOwnPropertyDescriptor(_this,targetName);decorator(_this,targetType,targetName,descriptor),Object.defineProperty(_this,targetName,descriptor)}},hasAttr=(attrName,_meta)=>{let has=!1;return _meta&&(has=_meta.findIndex(item=>{return item.name===attrName})!==-1),has},hasAttrEx=(attrName,member)=>{return _this._.instanceOf.findIndex(item=>{return!!item.meta[member]&&hasAttr(attrName,item.meta[member])})!==-1},isDefined=(member,ignoreLast)=>{let result=!1,last=_this._.instanceOf.length,i=1;for(let instance of _this._.instanceOf){if(instance.meta[member]&&i!==last){result=!0;break}i++}return result},applyAspects=((pattern,name)=>{let isMatched="*"===pattern;return isMatched||(pattern.indexOf("*")!==-1?(pattern=pattern.replace("*","[\\w]"),pRegEx=new RegExp(pattern),isMatched=pRegEx.test(name)):isMatched=pattern===name),isMatched},(funcName,funcAspects)=>{let fn=_this[funcName],before=[],after=[],around=[],instance=null,_fn=null;for(let funcAspect of funcAspects)instance=new funcAspect,_fn=instance.before(),"function"==typeof _fn&&before.push(_fn),_fn=instance.around(),"function"==typeof _fn&&around.push(_fn),_fn=instance.after(),"function"==typeof _fn&&after.push(_fn);around.length>0&&around.reverse();let weavedFn=function(...args){let error=null,result=null,ctx={obj:()=>{return _this},className:()=>{return className},funcName:()=>{return funcName},error:err=>{return err&&(error=err),error},result:value=>{return"undefined"!=typeof value&&(result=value),result},args:()=>{return args},data:{}};for(let beforeFn of before)try{beforeFn(ctx)}catch(err){error=err}const runAfterFn=_ctx=>{for(let afterFn of after)try{afterFn(_ctx)}catch(err){ctx.error(err)}};let newFn=fn,isASync=!1,_result=null;for(let aroundFn of around)newFn=aroundFn(ctx,newFn);try{_result=newFn(...args),_result&&"function"==typeof _result.then?(isASync=!0,ctx.result(new Promise((__resolve,__reject)=>{_result.then(value=>{ctx.result(value),runAfterFn(ctx),__resolve(ctx.result())}).catch(err=>{ctx.error(err),runAfterFn(ctx),__reject(ctx.error())})}))):(ctx.result(_result),runAfterFn(ctx))}catch(err){ctx.error(err)}return ctx.result()}.bind(_this);return weavedFn}),weave=()=>{if(["Attribute","Aspect"].indexOf(className)===-1&&!_this._.isInstanceOf("Attribute")&&!_this._.isInstanceOf("Aspect")){let funcAspects=[];for(let entry in meta)meta.hasOwnProperty(entry)&&"func"===meta[entry].type&&!isSpecialMember(entry)&&(funcAspects=flair.Aspects.get(className,entry,meta[entry]),funcAspects.length>0&&(meta[entry].aspects=funcAspects.slice(),Object.defineProperty(_this,entry,{value:applyAspects(entry,funcAspects)})))}},processJson=(source,target,isDeserialize)=>{let mappedName="";for(member in _this)_this.hasOwnProperty(member)&&("prop"!==memberType(member)||!isSerializableMember(member)||hasAttrEx("readonly",member)||isStaticMember(member)||isPrivateMember(member)||isProtectedMember(member)||isSpecialMember(member)||(mappedName=getAttrArgs("serialize",member)[0]||member,isDeserialize?target[member]=source[mappedName]||target[member]:target[mappedName]=source[member]))};_this.func=((name,fn)=>{if("function"==typeof name&&(fn=name,name="constructor"),"_"===name)throw`${className}.${name} is not allowed.`;fn||(fn=noop),isSpecialMember(name)&&(name="_"+name),null!==mixin_being_applied&&attr("mixed",mixin_being_applied),meta[name]=[].concat(bucket),meta[name].type="func",meta[name].aspects=[],meta[name].interfaces=[],bucket=[];let attrs=meta[name];if(!isConditionalMemberOK(name))return void delete meta[name];if(hasAttr("override",attrs)){let desc=Object.getOwnPropertyDescriptor(_this,name);if(!desc||"function"!=typeof desc.value)throw"_constructor"===name&&(name="constructor"),"_dispose"===name&&(name="dispose"),`${className}.${name} is not a function to override.`;if(hasAttrEx("sealed",name)&&!hasAttr("sealed",attrs))throw"_constructor"===name&&(name="constructor"),"_dispose"===name&&(name="dispose"),`${className}.${name} cannot override a sealed function.`;let base=_this[name].bind(_this);Object.defineProperty(_this,name,{value:function(...args){let fnArgs=[base].concat(args);return isArrowFunction(fn)?fn(...fnArgs):fn.apply(_this,fnArgs)}.bind(_this)})}else{if(isDefined(name,!0))throw"_constructor"===name&&(name="constructor"),"_dispose"===name&&(name="dispose"),`${className}.${name} is already defined.`;Object.defineProperty(_this,name,{configurable:!0,enumerable:!0,writable:!1,value:function(...args){return isArrowFunction(fn)?fn(...args):fn.apply(_this,args)}.bind(_this)})}applyAttr(name),meta[name].ref=_this[name],meta[name].raw=fn}),_this.construct=((...args)=>{_this.func.apply(_this,["constructor"].concat(args))}),_this.destruct=((...args)=>{_this.func.apply(_this,["dispose"].concat(args))}),_this.prop=((name,valueOrGetter,setter)=>{if(isSpecialMember(name))throw`${className}.${name} can only be defined as a function.`;"undefined"==typeof valueOrGetter&&"undefined"==typeof setter&&(valueOrGetter=null),null!==mixin_being_applied&&attr("mixed",mixin_being_applied),meta[name]=[].concat(bucket),meta[name].type="prop",meta[name].aspects=[],meta[name].interfaces=[],bucket=[];let attrs=meta[name];if(!isConditionalMemberOK(name))return void delete meta[name];if(hasAttr("override",attrs)){let desc=Object.getOwnPropertyDescriptor(_this,name);if(!desc||"function"!=typeof desc.get)throw`Not a property to override. (${className}.${name})`;if(hasAttrEx("sealed",name)&&!hasAttr("sealed",attrs))throw`Cannot override a sealed property. (${className}.${name})`;if(hasAttrEx("static",name)&&!hasAttr("static",attrs))throw`Cannot override a static property. (${className}.${name})`}else if(isDefined(name,!0))throw`${className}.${name} is already defined.`;if("function"!=typeof valueOrGetter){let propHost=null,uniqueName="",isStorageHost=!1;if(hasAttrEx("static",name)){if(uniqueName=name,hasAttrEx("session",name)||hasAttrEx("state",name))throw`A static property cannot be stored in session/state. (${className}.${name})`;propHost=staticInterface,propHost[uniqueName]||(propHost[uniqueName]=valueOrGetter)}else if(hasAttrEx("session",name)){if(!sessionStorage)throw`Session store (sessionStorage) is not available. (${className}.${name})`;uniqueName=className+"_"+name,propHost=sessionStorage,isStorageHost=!0,"undefined"==typeof propHost[uniqueName]&&(propHost[uniqueName]=JSON.stringify({value:valueOrGetter}))}else if(hasAttrEx("state",name)){if(!sessionStorage)throw`State store (localStorage) is not available. (${className}.${name})`;uniqueName=className+"_"+name,propHost=localStorage,isStorageHost=!0,"undefined"==typeof propHost[uniqueName]&&(propHost[uniqueName]=JSON.stringify({value:valueOrGetter}))}else uniqueName=name,propHost=props,propHost[uniqueName]=valueOrGetter;Object.defineProperty(_this,name,{__proto__:null,configurable:!0,enumerable:!0,get:()=>{return isStorageHost?JSON.parse(propHost[uniqueName]).value:propHost[uniqueName]},set:hasAttr("readonly",attrs)?value=>{if(!(_this._.constructing||hasAttr("once",attrs)&&!propHost[uniqueName]))throw`${name} is readonly.`;isStorageHost?propHost[uniqueName]=JSON.stringify({value:value}):propHost[uniqueName]=value}:value=>{isStorageHost?propHost[uniqueName]=JSON.stringify({value:value}):propHost[uniqueName]=value}})}else{if(hasAttr("static",attrs))throw`Static properties cannot be defined with a getter/setter. (${className}.${name})`;if(hasAttr("session",attrs)||hasAttr("state",attrs))throw`Properties defined with a getter/setter cannot be stored in session/state. (${className}.${name})`;Object.defineProperty(_this,name,{__proto__:null,configurable:!0,enumerable:!0,get:valueOrGetter,set:hasAttr("readonly",attrs)?value=>{if(!(_this._.constructing||hasAttr("once",attrs)&&!valueOrGetter()))throw`${name} is readonly.`;"function"==typeof setter&&setter(value)}:value=>{"function"==typeof setter&&setter(value)}})}applyAttr(name),meta[name].ref={get:()=>{return _this[name]},set:value=>{_this[name]=value}}}),_this.event=((name,argProcessor)=>{if(isSpecialMember(name))throw`${className}.${name} can only be defined as a function.`;if(isDefined(name,!0))throw`${className}.${name} is already defined.`;meta[name]=[],meta[name].type="event",meta[name].aspects=[],meta[name].interfaces=[],bucket.length>0&&(console.warn(`Attributes can only be applied to properties or functions. ${className}.${name} is an event.`),bucket=[]);let _event=function(...args){let processedArgs={};"function"==typeof argProcessor&&(processedArgs=argProcessor(...args));let e={name:name,args:processedArgs,stop:!1};for(let handler of events)if(handler(e),e.stop)break}.bind(_this);_event.subscribe=(fn=>{events.push(fn)}),_event.subscribe.all=(()=>{return events.slice()}),_event.unsubscribe=(fn=>{let index=events.indexOf(fn);index!==-1&&events.splice(index,1)}),_event.unsubscribe.all=(()=>{events=[]}),Object.defineProperty(_this,name,{configurable:!1,enumerable:!0,value:_event,writable:!1}),meta[name].ref=_this[name]}),_this.noop=noop,_this.noopAsync=noopAsync,_this._=_this._||{},_this._.type="instance",_this._.name=className,_this._.id=guid(),_this._.instanceOf=_this._.instanceOf||[],inherits||_this._.instanceOf.push({name:"Object",type:Object,meta:[],mixins:[],interfaces:[]}),_this._.instanceOf.push({name:className,type:Class,meta:meta,mixins:mixins,interfaces:interfaces}),_this._.inherits=Class,_this._.isInstanceOf=(name=>{return _this._.instanceOf.findIndex(item=>{return item.name===name})!==-1}),_this._.raw=(name=>{return meta[name]&&meta[name].raw?meta[name].raw:null}),_this._.isMixed=(name=>{let result=!1;for(let item of _this._.instanceOf)for(let mixin of item.mixins){if(mixin._.name===name){result=!0;break}if(result)break}return result}),_this._.isImplements=(name=>{let result=!1;for(let item of _this._.instanceOf)for(let _interface of item.interfaces){if(_interface._.name===name){result=!0;break}if(result)break}return result}),_this._._={hasAttr:hasAttr,hasAttrEx:hasAttrEx,isOwnMember:isOwnMember,isDerivedMember:isDerivedMember,isProtectedMember:isProtectedMember,isSealedMember:isSealedMember,isSerializableMember:isSerializableMember},_this._.serialize=(()=>{let json={};return processJson(_this,json),json}),_this._.deserialize=(json=>{processJson(json,_this,!0)});const factoryHelper=attr;if(factoryHelper.attr=attr,factory.apply(_this,[factoryHelper]),_flag!==theFlag&&isAbstractClass())throw`Cannot create instance of an abstract class. (${className})`;if(0!==mixins.length)for(let mixin of mixins)"mixin"===mixin._.type&&(mixin_being_applied=mixin,mixin.apply(_this,[factoryHelper]),mixin_being_applied=null);delete _this.func,delete _this.construct,delete _this.destruct,delete _this.prop,delete _this.event,delete _this.noop,delete _this.noopAsync,weave(),isNeedProtected||("function"==typeof _this._constructor&&(_this._.constructing=!0,_this._constructor(...classArgs),_this._.constructor=this._constructor,delete _this._constructor,delete _this._.constructing),"function"==typeof _this._dispose&&(_this._.dispose=_this._dispose,delete _this._dispose));let isCopy=!1;doCopy("_");for(let member in _this)isCopy=!1,_this.hasOwnProperty(member)&&(isCopy=!0,isOwnMember(member)?(isPrivateMember(member)&&(isCopy=!1),isCopy&&isProtectedMember(member)&&!isNeedProtected&&(isCopy=!1)):(isProtectedMember(member)&&!isNeedProtected&&(isCopy=!1),isCopy&&!isDerivedMember(member)&&(isCopy=!1))),isCopy&&isHiddenMember(member)&&(isCopy=!1),isCopy&&doCopy(member);for(let member in _exposed_this)!isSpecialMember(member)&&isOwnMember(member)&&isSealedMember(member)&&Object.defineProperty(_exposed_this,member,{configurable:!1});if(0!==interfaces.length)for(let _interface of interfaces)for(let _memberName in _interface)if(_interface.hasOwnProperty(_memberName)&&"_"!==_memberName){let _member=_interface[_memberName],_type=typeof _exposed_this[_memberName];if("undefined"===_type)throw`${_interface._.name}.${_memberName} is not defined.`;switch(_member.type){case"func":if("function"!==_type)throw`${_interface._.name}.${_memberName} is not a function.`;meta[_memberName].interfaces.indexOf(_interface)===-1&&meta[_memberName].interfaces.push(_interface);break;case"prop":if("function"===_type)throw`${_interface._.name}.${_memberName} is not a property.`;meta[_memberName].interfaces.indexOf(_interface)===-1&&meta[_memberName].interfaces.push(_interface);break;case"event":if("function"!==_type||"function"!=typeof _exposed_this[_memberName].subscribe)throw`${_interface._.name}.${_memberName} is not an event.`;meta[_memberName].interfaces.indexOf(_interface)===-1&&meta[_memberName].interfaces.push(_interface)}}return _this._.pu=isNeedProtected?null:_exposed_this,_this._.pr=isNeedProtected?null:_this,isSingletonClass()?(Class._.isSingleton=(()=>{return!0}),Class._.singleInstance=(()=>{return Object.freeze(_exposed_this)}),Class._.singleInstance.clear=(()=>{Class._.singleInstance=(()=>{return null}),Class._.isSingleton=(()=>{return!1})}),Class._.singleInstance()):isSealedMember("_constructor")?(Class._.isSealed=(()=>{return!0}),Object.freeze(_exposed_this)):_exposed_this};return Class._={inherits:inherits,mixins:mixins,interfaces:interfaces,name:className,type:"class",namespace:null,singleInstance:()=>{return null},isSingleton:()=>{return!1},isSealed:()=>{return!1},isDerivedFrom:name=>{let result="Object"===name,prv=inherits;if(!result)for(;;){if(null===prv)break;if(prv._.name===name){result=!0;break}prv=prv._.inherits}return result},isMixed:name=>{let result=!1;for(let mixin of mixins)if(mixin._.name===name){result=!0;break}return result},isImplements:name=>{let result=!1;for(let _interface of interfaces)if(_interface._.name===name){result=!0;break}return result},static:{}},Class._.singleInstance.clear=(()=>{}),flair.Namespace(Class),Class}),flair.Mixin=((mixinName,factory)=>{return factory._={name:mixinName,type:"mixin",namespace:null},flair.Namespace(factory),factory}),flair.Interface=((interfaceName,factory)=>{let meta={},_this={};const isSpecialMember=member=>{return["constructor","dispose","_constructor","_dispose","_"].indexOf(member)!==-1};return _this.func=(name=>{if("undefined"!=typeof meta[name])throw`${interfaceName}.${name} is already defined.`;if(isSpecialMember(name))throw`${interfaceName}.${name} can only be defined for a class.`;meta[name]=[],meta[name].type="func"}),_this.prop=(name=>{if("undefined"!=typeof meta[name])throw`${interfaceName}.${name} is already defined.`;if(isSpecialMember(name))throw`${interfaceName}.${name} can only be defined as a function for a class.`;meta[name]=[],meta[name].type="prop"}),_this.event=(name=>{if("undefined"!=typeof meta[name])throw`${interfaceName}.${name} is already defined.`;if(isSpecialMember(name))throw`${interfaceName}.${name} can only be defined as a function for a class.`;meta[name]=[],meta[name].type="event"}),meta._={name:interfaceName,type:"interface",namespace:null},flair.Namespace(meta),factory.apply(_this),delete _this.func,delete _this.prop,delete _this.event,meta}),flair.Enum=((enumName,keyValuePairsOrArray)=>{let _enum=keyValuePairsOrArray;if(Array.isArray(keyValuePairsOrArray)){let i=0;_enum={};for(key of keyValuePairsOrArray)_enum[key]=i,i++}return _enum._={name:enumName,type:"enum",namespace:null,keys:()=>{let items=[];for(let i in keyValuePairs)keyValuePairs.hasOwnProperty(key)&&"_"!==key&&items.push(key);return items},values:()=>{let items=[];for(let key in keyValuePairs)keyValuePairs.hasOwnProperty(key)&&"_"!==key&&items.push(keyValuePairs[key]);return items}},flair.Namespace(_enum),Object.freeze(_enum)}),flair.Enum.getKeys=(enumObj=>{if(enumObj._&&"enum"===enumObj._.type)return enumObj._.keys();throw enumName=enumObj._&&enumObj._.name?enumObj._.name:"unknown",`${enumName} is not an Enum.`}),flair.Enum.getValues=(enumObj=>{if(enumObj._&&"enum"===enumObj._.type)return enumObj._.values();throw enumName=enumObj._&&enumObj._.name?enumObj._.name:"unknown",`${enumName} is not an Enum.`}),flair.Enum.isDefined=((enumObj,keyOrValue)=>{if(enumObj._&&"enum"===enumObj._.type)return enumObj._.keys.indexOf(keyOrValue)!==-1||enumObj._.values.indexOf(keyOrValue)!==-1;throw enumName=enumObj._&&enumObj._.name?enumObj._.name:"unknown",`${enumName} is not an Enum.`}),flair.Resource=((resName,resFile,data)=>{let resData=data||"",isLoaded=!1,_res={file:()=>{return resFile},type:()=>{return resFile.substr(resFile.lastIndexOf(".")+1).toLowerCase()},get:()=>{return resData},load:Object.freeze({asJSON:()=>{return JSON.parse(resData)},asCSS:()=>{if(flair.options.env.isClient){if(!isLoaded){let css=flair.options.env.global.document.createElement("style");css.type="text/css",css.name=resFile,css.innerHTML=resData,flair.options.env.global.document.head.appendChild(css),isLoaded=!0}return isLoaded}return!1},asHTML:(node,position="")=>{return!(!flair.options.env.isClient||!node)&&(isLoaded||(position?node.innerHTML=resData:node.insertAdjacentHTML(position,resData),isLoaded=!0),isLoaded)},asJS:cb=>{if(flair.options.env.isClient){if(!isLoaded){let js=flair.options.env.global.document.createElement("script");js.type="text/javascript",js.name=resFile,js.src=resData,"function"==typeof cb&&(js.onload=cb,js.onerror=(()=>{isLoaded=!1})),flair.options.env.global.document.head.appendChild(js),isLoaded=!0}return isLoaded}return!1}})};_res._={name:resName,type:"resource",namespace:null,file:resFile,data:data=>{return data&&!resData&&(resData=data),resData}},_res.JSON={};try{_res.JSON=Object.freeze(_res.load.asJSON())}catch(e){}return flair.Namespace(_res),Object.freeze(_res)}),flair.Resource.load=((resObj,...args)=>{if(resObj._&&"resource"===resObj._.type){let type=resObj.type();switch(type){case"json":return resObj.load.asJSON();case"css":return resObj.load.asCSS();case"js":return resObj.load.asJS(...args);case"html":return resObj.load.asHTML(...args);default:throw`Unknown resource type: ${type}.`}}throw resName=resObj._&&resObj._.name?resObj._.name:"unknown",`${resName} is not a Resource.`}),flair.Resource.get=(resName=>{let resObj=flair.Namespace.getType(resName);return resObj._&&"resource"===resObj._.type?resType.get():null}),flair.Structure=((structureName,factory)=>{let Structure=function(...args){let _this=this;return _this._=_this._||{},_this._.type="sinstance",_this._.name=structureName,_this._.inherits=Structure,factory.apply(_this,...args),_this};return Structure._={name:structureName,type:"structure",namespace:null},flair.Namespace(Structure),Structure}),flair.which=((def,isFile)=>{if(isFile){if(def.indexOf("{.min}")!==-1)return flair.options.env.isProd?def.replace("{.min}",".min"):def.replace("{.min}","")}else if(def.indexOf("|")){let items=def.split("|"),item="";return item=flair.options.env.isServer?items[0].trim():items[1].trim(),"x"===item&&(item=""),item}return def}),flair.using=((obj,scopeFn)=>{try{scopeFn(obj)}finally{obj._&&"function"==typeof obj._.dispose&&obj._.dispose()}}),flair.as=((obj,intf)=>{if(!obj||!obj._||"instance"!==obj._.type)throw new flair.Exception("AS01",`Unknown/unsupported object type: ${obj&&obj._&&obj._.type?obj._.type:""}`);if("string"==typeof intf)switch(intf){case"public":return obj._.pu;case"protected":case"private":return obj._.pr;default:throw new flair.Exception("AS03",`Unknown scope type: ${intf}`)}else switch(intf._.type){case"interface":if(obj._.isImplements(intf._.name))return obj;break;case"mixin":if(obj._.isMixed(intf._.name))return obj;break;case"class":if(obj._.isInstanceOf(intf._.name))return obj;break;default:throw new flair.Exception("AS02",`Unknown/unsupported interface type: ${intf}`)}return null}),flair.is=((objOtType,intf)=>{if("string"!=typeof intf)return null!==flair.as(obj);throw new flair.Exception("IS01",`Scope types are not supported: ${intf}`)}),flair.classOf=(obj=>{if(obj._&&"instance"===obj._.type)return obj._.inherits;throw"Invalid arguments."}),flair.isDerivedFrom=((cls,parentCls)=>{if(cls._&&"class"===cls._.type&&parentCls._&&"class"===parentCls._.type)return!!cls._.isDerivedFrom(parentCls._.name);throw"Invalid arguments."}),flair.isImplements=((objOrCls,intf)=>{if(objOrCls._&&("class"===objOrCls._.type||"instance"===objOrCls._.type)&&intf._&&"interface"===intf._.type)return!!objOrCls._.isImplements(intf._.name);throw"Invalid arguments."}),flair.isInstanceOf=((obj,cls)=>{if(obj._&&"instance"===obj._.type&&cls._&&"class"===cls._.type)return!!obj._.isInstanceOf(cls._.name);throw"Invalid arguments."}),flair.isMixed=((objOrCls,mix)=>{if(objOrCls._&&("class"===objOrCls._.type||"instance"===objOrCls._.type)&&mix._&&"mixin"===mix._.type)return!!obj._.isMixed(mix._.name);throw"Invalid arguments."});let container={};flair.Container={},flair.Container.register=((alias,type)=>{"function"==typeof alias&&(type=alias,alias=type._.name),"string"==typeof alias&&"string"==typeof type&&(type=flair.which(type),type=flair.Namespace.getType(type)),container[alias]||(container[alias]=[]),container[alias].push(type)}),flair.Container.isRegistered=(alias=>{return"undefined"!=typeof container[alias]}),flair.Container.get=(alias=>{return(container[alias]||[]).slice()}),flair.Container.resolve=((alias,isMultiResolve,...args)=>{let result=null,getResolvedObject=Type=>{let obj=Type;return Type._&&Type._.type&&["class","structure"].indexOf(Type._.type)!==-1&&(obj=new Type(...args)),obj};if(container[alias]&&container[alias].length>0)if(isMultiResolve){result=[];for(let Type of container[alias])result.push(getResolvedObject(Type))}else{let Type=container[alias][0];result=getResolvedObject(Type)}return result}),flair.Attribute=flair.Class("Attribute",function(attr){let decoratorFn=null;attr("abstract"),this.construct((...args)=>{this.args=[];for(let arg of args)if("string"==typeof arg)if(arg.startsWith("[")&&arg.endsWith("]")){let fnName=arg.replace("[","").replace("]",""),fn=function(){let member=this[fnName];return"function"==typeof member?member():member};this.args.push(fn)}else this.args.push(arg);else this.args.push(arg)}),this.prop("args",[]),this.func("decorator",fn=>{return"function"==typeof fn&&(decoratorFn=fn),decoratorFn}),this.func("resetEventInterface",(source,target)=>{target.subscribe=source.subscribe,target.unsubscribe=source.unsubscribe,delete source.subscribe,delete source.unsubscribe})}),flair.Container.register(flair.Class("async",flair.Attribute,function(){this.decorator((obj,type,name,descriptor)=>{if(["func"].indexOf(type)===-1)throw`async attribute cannot be applied on ${type} members. (${className}.${name})`;if(["_constructor","_dispose"].indexOf(type)!==-1)throw`async attribute cannot be applied on special function. (${className}.${name})`;let fn=descriptor.value;descriptor.value=function(...args){return new Promise((resolve,reject)=>{let fnArgs=[resolve,reject].concat(args);fn(...fnArgs)})}.bind(obj)})})),flair.Container.register(flair.Class("deprecate",flair.Attribute,function(){this.decorator((obj,type,name,descriptor)=>{if(["_constructor","_dispose"].indexOf(type)!==-1)throw`deprecate attribute cannot be applied on special function. (${className}.${name})`;let msg=`${name} is deprecated.`;switch("undefined"!=typeof this.args[0]&&(msg+=" "+this.args[0]),type){case"prop":if(descriptor.get){let _get=descriptor.get;descriptor.get=function(){return console.warn(msg),_get()}.bind(obj)}if(descriptor.set){let _set=descriptor.set;descriptor.set=function(value){return console.warn(msg),_set(value)}.bind(obj)}break;case"func":let fn=descriptor.value;descriptor.value=function(...args){console.warn(msg),fn(...args)}.bind(obj);break;case"event":let ev=descriptor.value;descriptor.value=function(...args){console.warn(msg),ev(...args)}.bind(obj),this.resetEventInterface(fn,descriptor.value)}})})),flair.Container.register(flair.Class("enumerate",flair.Attribute,function(){this.decorator((obj,type,name,descriptor)=>{if(["_constructor","_dispose"].indexOf(type)!==-1)throw`enumerate attribute cannot be applied on special function. (${className}.${name})`;let flag=this.args[0];descriptor.enumerable=flag})})),flair.Container.register(flair.Class("inject",flair.Attribute,function(){this.decorator((obj,type,name,descriptor)=>{if(["func","prop"].indexOf(type)===-1)throw`inject attribute cannot be applied on ${type} members. (${className}.${name})`;if(["_constructor","_dispose"].indexOf(name)!==-1)throw`inject attribute cannot be applied on special function. (${className}.${name})`;let Type=this.args[0],typeArgs=this.args[1],instance=null;switch(Array.isArray(typeArgs)||(typeArgs=[typeArgs]),"string"==typeof Type?(Type=flair.which(Type),instance=flair.Container.resolve(Type,!1,...typeArgs)):instance=new Type(...typeArgs),type){case"func":let fn=descriptor.value;descriptor.value=function(...args){fn(instance,...args)}.bind(obj);break;case"prop":obj[name]=instance}})})),flair.Container.register(flair.Class("multiinject",flair.Attribute,function(){this.decorator((obj,type,name,descriptor)=>{
if(["func","prop"].indexOf(type)===-1)throw`multiinject attribute cannot be applied on ${type} members. (${className}.${name})`;if(["_constructor","_dispose"].indexOf(name)!==-1)throw`multiinject attribute cannot be applied on special function. (${className}.${name})`;let Type=this.args[0],typeArgs=this.args[1],instance=null;if(Array.isArray(typeArgs)||(typeArgs=[typeArgs]),"string"!=typeof Type)throw`multiinject attribute does not support direct type injections. (${className}.${name})`;switch(Type=flair.which(Type),instance=flair.Container.resolve(Type,!0,...typeArgs),type){case"func":let fn=descriptor.value;descriptor.value=function(...args){fn(instance,...args)}.bind(obj);break;case"prop":obj[name]=instance}})}));let allAspects=[],regExpEscape=s=>{return s.replace(/[|\\{}()[\]^$+*?.]/g,"\\$&")},wildcardToRegExp=s=>{return new RegExp("^"+s.split(/\*+/).map(regExpEscape).join(".*")+"$")};flair.Aspects={},flair.Aspects.raw=(()=>{return allAspects}),flair.Aspects.register=((pointcut,Aspect)=>{let nm=pointcut||"~",ns="",cls="",fnc="",attr="~",bucket="";if(nm.indexOf("/")!==-1){let items=nm.split("/");nm=items[0].trim(),attr=items[1].trim()}if("~"===nm)ns="~",cls="~",fnc="~";else if(""===nm)ns="^",cls="~",fnc="~";else if(nm.indexOf(".")===-1)if(ns="^",nm.indexOf(":")===-1)cls=nm,fnc="~";else{let itms=nm.split(":");cls=itms[0].trim(),fnc=itms[1].trim()}else if(ns=nm.substr(0,nm.lastIndexOf(".")),nm=nm.substr(nm.lastIndexOf(".")+1),nm.indexOf(":")===-1)cls=nm,fnc="~";else{let itms=nm.split(":");cls=itms[0].trim(),fnc=itms[1].trim()}"*"!==ns&&""!==ns||(ns="~"),"*"!==cls&&""!==cls||(cls="~"),"*"!==fnc&&""!==fnc||(fnc="~"),"*"!==attr&&""!==attr||(attr="~"),bucket=`${ns}=${cls}=${fnc}=${attr}`,allAspects[bucket]=allAspects[bucket]||[],allAspects[bucket].push(Aspect)}),flair.Aspects.get=((className,funcName,attrs)=>{let funcAspects=[],ns="",cls="",fnc=funcName.trim(),bucket="";className.indexOf(".")!==-1?(ns=className.substr(0,className.lastIndexOf(".")).trim(),cls=className.substr(className.lastIndexOf(".")+1).trim()):(ns="^",cls=className.trim());for(let bucket in allAspects){let items=bucket.split("="),thisNS=items[0],rxNS=wildcardToRegExp(thisNS),thisCls=items[1],rxCls=wildcardToRegExp(thisCls),thisFnc=items[2],rxFnc=wildcardToRegExp(thisFnc),thisAttr=items[3],rxAttr=wildcardToRegExp(thisAttr),isMatched="~"===thisAttr;if((ns===thisNS||rxNS.test(ns))&&(cls===thisCls||rxCls.test(cls))&&(fnc===thisFnc||rxFnc.test(fnc))){if(!isMatched)for(let attr of attrs)if(attr.name===thisAttr||rxAttr.test(attr.name)){isMatched=!0;break}if(isMatched)for(let aspect of allAspects[bucket])funcAspects.indexOf(aspect)===-1&&funcAspects.push(aspect)}}return funcAspects}),flair.Aspect=flair.Class("Aspect",function(attr){let beforeFn=null,afterFn=null,aroundFn=null;attr("abstract"),this.construct((...args)=>{this.args=args}),this.prop("args",[]),this.func("before",fn=>{return"function"==typeof fn&&(beforeFn=fn),beforeFn}),this.func("after",fn=>{return"function"==typeof fn&&(afterFn=fn),afterFn}),this.func("around",fn=>{return"function"==typeof fn&&(aroundFn=fn),aroundFn})}),flair.Serializer={},flair.Serializer.serialize=(instance=>{return(instance._.type="instance")?instance._.serialize():null}),flair.Serializer.deserialize=((Type,json)=>{let instance=new Type;return(instance._.type="instance")?(instance._.deserialize(json),instance):null}),flair.Reflector={},flair.Reflector.get=(forTarget=>{const CommonTypeReflector=function(target){this.getType=(()=>{return target._.type}),this.getName=(()=>{return target._.name||""}),this.getNamespace=(()=>{let _Namespace=target._.namespace;return _Namespace?new NamespaceReflector(_Namespace):null}),this.getTarget=(()=>{return target}),this.isInstance=(()=>{return"instance"===target._.type}),this.isClass=(()=>{return"class"===target._.type}),this.isEnum=(()=>{return"enum"===target._.type}),this.isStructure=(()=>{return"structure"===target._.type}),this.isStructureInstance=(()=>{return"sinstance"===target._.type}),this.isNamespace=(()=>{return"namespace"===target._.type}),this.isMixin=(()=>{return"mixin"===target._.type}),this.isInterface=(()=>{return"interface"===target._.type})},CommonMemberReflector=function(type,target,name){this.getType=(()=>{return"member"}),this.getMemberType=(()=>{return type}),this.getTarget=(()=>{return target}),this.getTargetType=(()=>{return target._.type}),this.getName=(()=>{return name})},AttrReflector=function(Attr,name,args,target){this.getType=(()=>{return"attribute"}),this.getName=(()=>{return name}),this.getTarget=(()=>{return target}),this.getArgs=(()=>{return args.slice()}),this.getClass=(()=>{return Attr?new ClassReflector(Attr):null})},AspectReflector=function(Aspect,target){this.getType=(()=>{return"aspect"}),this.getName=(()=>{return Aspect._.name}),this.getTarget=(()=>{return target}),this.getClass=(()=>{return Aspect?new ClassReflector(Aspect):null})},CommonInstanceMemberReflector=function(type,target,name,ref){let refl=new CommonMemberReflector(type,target,name);return refl.getAttributes=(()=>{let items=[],attrs=[];for(let item of target._.instanceOf)if(item.meta[name]){attrs=item.meta[name];for(let attr of attrs)items.push(new AttrReflector(attr.Attr,attr.name,attr.args,target))}return items}),refl.hasAttribute=(attrName=>{let isOk=!1,attrs=[];for(let item of target._.instanceOf){if(item.meta[name]){attrs=item.meta[name];for(let attr of attrs)if(attr.name==attrName){isOk=!0;break}}if(isOk)break}return isOk}),refl.getAttribute=(attrName=>{let attrInfo=null;for(let item of target._.instanceOf){if(item.meta[name]){attrs=item.meta[name];for(let attr of attrs)if(attr.name===attrName){attrInfo=new AttrReflector(attr.Attr,attr.name,attr.args,target);break}}if(null!==attrInfo)break}return attrInfo}),refl.isEnumerable=(()=>{return!!target[name]&&Object.getOwnPropertyDescriptor(target,name).enumerable}),refl.isDeprecated=(()=>{return target._._.hasAttrEx("deprecate",name)}),refl.isConditional=(()=>{return target._._.hasAttrEx("conditional",name)}),refl.isOverridden=(()=>{return target._._.hasAttrEx("override",name)}),refl.isOwn=(()=>{return target._.isOwnMember(name)}),refl.isDerived=(()=>{return target._._.isDerivedMember(name)}),refl.isPrivate=(()=>{return target._._.hasAttrEx("private",name)}),refl.isProtected=(()=>{return target._._.isProtectedMember(name)}),refl.isPublic=(()=>{return!refl.isPrivate&&!refl.isProtected}),refl.isSealed=(()=>{return target._._.isSealedMember(name)}),refl.isMixed=(()=>{return target._._.hasAttrEx("mixed",name)}),refl.getMixin=(()=>{if(refl.isMixed()){let mixin=refl.getAttribute("mixed").getArgs()[0];return new MixinReflector(mixin)}return null}),refl.isInterfaceEnforced=(()=>{return refl.getInterfaces().length>0}),refl.getInterfaces=(()=>{let items=[],interfaces=[];for(let item of target._.instanceOf)if(item.meta[name]){interfaces=item.meta[name].interfaces;for(let iface of interfaces)items.push(new InterfaceReflector(iface,target))}return items}),refl.isProp=(()=>{return"prop"===type}),refl.isFunc=(()=>{return"func"===type}),refl.isEvent=(()=>{return"event"===type}),refl},PropReflector=function(target,name,ref){let refl=new CommonInstanceMemberReflector("prop",target,name,ref);return refl.getValue=(()=>{return target[name]}),refl.setValue=(value=>{return target[name]=value}),refl.getRaw=(()=>{return ref}),refl.isReadOnly=(()=>{return target._._.hasAttrEx("readonly",name)}),refl.isSetOnce=(()=>{return target._._.hasAttrEx("readonly",name)&&target._._.hasAttrEx("once",name)}),refl.isStatic=(()=>{return target._._.hasAttrEx("static",name)}),refl.isSerializable=(()=>{return target._._.isSerializableMember(name)}),refl},FuncReflector=function(target,name,ref,raw){let refl=new CommonInstanceMemberReflector("func",target,name,ref);return refl.invoke=((...args)=>{return target[name](...args)}),refl.getAspects=(()=>{let items=[],aspects=[];for(let item of target._.instanceOf)if(item.meta[name]){aspects=item.meta[name].aspects;for(let aspect of aspects)items.push(new AspectReflector(aspect,target))}return items}),refl.getRaw=(()=>{return raw}),refl.isASync=(()=>{return target._._.hasAttrEx("async",name)}),refl.isConstructor=(()=>{return"_constructor"===name}),refl.isDisposer=(()=>{return"_dispose"===name}),refl},EventReflector=function(target,name,ref){let refl=new CommonInstanceMemberReflector("event",target,name,ref);return refl.raise=((...args)=>{return ref(...args)}),refl.isSubscribed=(()=>{return ref.subscribe.all().length>0}),refl},KeyReflector=function(target,name){let refl=new CommonMemberReflector("key",target,name);return refl.getValue=(()=>{return target[name]}),refl},InstanceReflector=function(target){let refl=new CommonTypeReflector(target),filterMembers=(members,type,attrs)=>{if(""===type&&0===attrs.length)return members.slice();let filtered=[],hasAllAttrs=!0;for(let member of members)if("member"===member.getType()&&(""===type||member.getMemberType()===type)){if(hasAllAttrs=!0,0!==attrs.length)for(let attrName of attrs)if(!member.hasAttribute(attrName)){hasAllAttrs=!1;break}hasAllAttrs&&filtered.push(member)}return filtered};return getMembers=(oneMember=>{let members=[],attrs=[],lastMember=null,member=null;for(let instance of target._.instanceOf){for(let name in instance.meta){if(instance.meta.hasOwnProperty(name)){switch(attrs=instance.meta[name],instance.meta[name].type){case"func":lastMember=new FuncReflector(target,name,instance.meta[name].ref,instance.meta[name].raw),members.push(lastMember);break;case"prop":lastMember=new PropReflector(target,name,instance.meta[name].ref),members.push(lastMember);break;case"event":lastMember=new EventReflector(target,name,instance.meta[name].argNames,instance.meta[name].ref),members.push(lastMember);break;default:throw"Unknown member type"}"undefined"!=typeof oneMember&&name===oneMember&&(members=[],member=lastMember)}if(null!==member)break}if(null!==member)break}return null!==member?member:{all:(...attrs)=>{return filterMembers(members,"",attrs)},func:(...attrs)=>{return filterMembers(members,"func",attrs)},prop:(...attrs)=>{return filterMembers(members,"prop",attrs)},event:(...attrs)=>{return filterMembers(members,"event",attrs)}}}),refl.getClass=(()=>{return null!==target._.inherits?new ClassReflector(target._.inherits):null}),refl.getFamily=(()=>{let items=[],prv=target._.inherits;for(;;){if(null===prv)break;items.push(new ClassReflector(prv)),prv=prv._.inherits}return items}),refl.getMixins=(()=>{let items=[],family=refl.getFamily();for(let cls of family)items=items.concat(cls.getMixins());return items}),refl.getInterfaces=(()=>{let items=[],family=refl.getFamily();for(let cls of family)items=items.concat(cls.getInterfaces());return items}),refl.getMembers=((...attrs)=>{let members=getMembers();return 0!==attrs.length?members.all(...attrs):members}),refl.getMember=(name=>{return getMembers(name)}),refl.isSingleton=(()=>{return refl.getClass().isSingleton()}),refl.isInstanceOf=(name=>{return target._.isInstanceOf(name)}),refl.isMixed=(name=>{return target._.isMixed(name)}),refl.isImplements=(name=>{return target._.isImplements(name)}),refl},StructureInstanceReflector=function(target){let refl=new CommonTypeReflector(target);return refl.getStructure=(()=>{return null!==target._.inherits?new StructureReflector(target._.inherits):null}),refl.getMembers=(()=>{let keys=Object.keys(target);return _At=keys.indexOf("_"),_At!==-1&&keys.splice(_At,1),keys}),refl.getMember=(name=>{return target[name]}),refl.invoke=((...args)=>{return target[name](...args)}),refl.isInstanceOf=(name=>{return target._.inherits._.name===name}),refl},ClassReflector=function(target){let refl=new CommonTypeReflector(target);return refl.getParent=(()=>{return null!==target._.inherits?new ClassReflector(target._.inherits):null}),refl.getFamily=(()=>{let items=[],prv=target._.inherits;for(;;){if(null===prv)break;items.push(new ClassReflector(prv)),prv=prv._.inherits}return items}),refl.getMixins=(()=>{let items=[];for(let mixin of target._.mixins)items.push(new MixinReflector(mixin));return items}),refl.getInterfaces=(()=>{let items=[];for(let _interface of target._.interfaces)items.push(new InterfaceReflector(_interface));return items}),refl.isSingleton=(()=>{return target._.isSingleton()}),refl.isSingleInstanceCreated=(()=>{return null!==target._.singleInstance()}),refl.isSealed=(()=>{return target._.isSealed()}),refl.isDerivedFrom=(name=>{return target._.isDerivedFrom(name)}),refl.isMixed=(name=>{return target._.isMixed(name)}),refl.isImplements=(name=>{return target._.isImplements(name)}),refl},EnumReflector=function(target){let refl=new CommonTypeReflector(target);return refl.getMembers=(()=>{let keys=target._.keys(),members=[];for(let key of keys)members.push(new KeyReflector(target,key));return members}),refl.getMember=(name=>{if("undefined"==typeof target[name])throw`${name} is not defined.`;return new KeyReflector(target,name)}),refl.getKeys=(()=>{return target._.keys()}),refl.getValues=(()=>{return target._.values()}),refl},ResourceReflector=function(target){let refl=new CommonTypeReflector(target);return refl.getFile=(()=>{return target.file()}),refl.getResType=(()=>{return target.type()}),refl.getContent=(()=>{return target.get()}),refl},StructureReflector=function(target){let refl=new CommonTypeReflector(target);return refl},NamespaceReflector=function(target){let refl=new CommonTypeReflector(target);return refl.getMembers=(()=>{let types=target.getTypes(),members=[];if(types)for(type of types)switch(type._.type){case"class":members.push(new ClassReflector(type));break;case"enum":members.push(new EnumReflector(type));break;case"structure":members.push(new StructureReflector(type));break;case"mixin":members.push(new MixinReflector(type));break;case"interface":members.push(new InterfaceReflector(type))}return members}),refl.getMember=(qualifiedName=>{let Type=target.getType(qualifiedName),member=null;if(Type)switch(Type._.type){case"class":member=new ClassReflector(Type);break;case"enum":member=new EnumReflector(Type);break;case"structure":member=new StructureReflector(Type);break;case"mixin":member=new MixinReflector(Type);break;case"interface":member=new InterfaceReflector(Type)}return member}),refl.createInstance=((qualifiedName,...args)=>{return target.createInstance(qualifiedName,...args)}),refl},MixinReflector=function(target){let refl=new CommonTypeReflector(target);return refl},InterfaceReflector=function(target){let refl=new CommonTypeReflector(target),getMembers=()=>{let members=[];for(let _memberName in target)target.hasOwnProperty(_memberName)&&"_"!==_memberName&&members.push(new CommonMemberReflector(target[_memberName].type,target,_memberName));return members};return refl.getMembers=(()=>{return getMembers()}),refl.getMember=(name=>{if("undefined"==typeof target[name])throw`${name} is not defined.`;return new CommonMemberReflector(target[name].type,target,name)}),refl};let ref=null;switch(forTarget._.type){case"instance":ref=new InstanceReflector(forTarget);break;case"sinstance":ref=new StructureInstanceReflector(forTarget);break;case"class":ref=new ClassReflector(forTarget);break;case"enum":ref=new EnumReflector(forTarget);break;case"resource":ref=new ResourceReflector(forTarget);break;case"structure":ref=new StructureReflector(forTarget);break;case"namespace":ref=new NamespaceReflector(forTarget);break;case"mixin":ref=new MixinReflector(forTarget);break;case"interface":ref=new InterfaceReflector(forTarget);break;default:throw`Unknown type ${forTarget._.type}.`}return ref});let g=options.env.global;return options.env.supressGlobals||(g.Exception=Object.freeze(flair.Exception),g.Class=Object.freeze(flair.Class),g.Mixin=Object.freeze(flair.Mixin),g.Interface=Object.freeze(flair.Interface),g.Structure=Object.freeze(flair.Structure),g.Enum=Object.freeze(flair.Enum),g.Resource=Object.freeze(flair.Resource),g.Assembly=Object.freeze(flair.Assembly),g.Namespace=Object.freeze(flair.Namespace),g.which=Object.freeze(flair.which),g.bring=Object.freeze(flair.bring),g.using=Object.freeze(flair.using),g.as=Object.freeze(flair.as),g.is=Object.freeze(flair.is),g.isDerivedFrom=Object.freeze(flair.isDerivedFrom),g.isImplements=Object.freeze(flair.isImplements),g.isInstanceOf=Object.freeze(flair.isInstanceOf),g.isMixed=Object.freeze(flair.isMixed),g.classOf=Object.freeze(flair.classOf),g.Attribute=Object.freeze(flair.Attribute),g.Aspects=Object.freeze(flair.Aspects),g.Aspect=Object.freeze(flair.Aspect),g.Container=Object.freeze(flair.Container),g.Serializer=Object.freeze(flair.Serializer),g.Reflector=Object.freeze(flair.Reflector)),g.flair=flair,Object.freeze(flair)};"object"==typeof("undefined"!=typeof module&&null!==module?module.exports:void 0)?module.exports=def:"function"==typeof define&&"undefined"!=typeof define.amd?define(function(){return def}):this.flair=def}).call(this);
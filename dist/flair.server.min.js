/**
 * @preserve
 * Flair.js
 * True Object Oriented JavaScript
 * 
 * Assembly: flair.server
 *     File: ./flair.server.js
 *  Version: 0.25.53
 *  Sun, 17 Mar 2019 20:42:37 GMT
 * 
 * (c) 2017-2019 Vikas Burman
 * Licensed under MIT
 */
(()=>{"use strict";const e=void 0!==!0?require("flairjs"):"undefined"!=typeof WorkerGlobalScope?WorkerGlobalScope.flair:(!0).flair,{Class:r,Struct:t,Enum:s,Interface:n,Mixin:o}=e,{Aspects:i}=e,{AppDomain:a}=e,l=e.AppDomain.context.current().name,{$$:p,attr:c}=e,{bring:u,Container:d,include:f}=e,{Port:v}=e,{on:m,post:h,telemetry:y}=e,{Reflector:$}=e,{Serializer:g}=e,{Tasks:b}=e,{TaskInfo:w}=e.Tasks,{as:A,is:S,isComplies:x,isDerivedFrom:O,isImplements:j,isInstanceOf:E,isMixed:R}=e,{getAssembly:T,getAttr:k,getContext:B,getResource:F,getRoute:M,getType:q,ns:H,getTypeOf:V,typeOf:z}=e,{dispose:D,using:I}=e,{Args:C,Exception:P,noop:W,nip:N,nim:G,nie:L,event:J}=e,{env:K}=e.options,{forEachAsync:U,replaceAll:Q,splitAndTrim:X,findIndexByProp:Y,findItemByProp:Z,which:_,isArrowFunc:ee,isASyncFunc:re,sieve:te,b64EncodeUnicode:se,b64DecodeUnicode:ne}=e.utils,{$static:oe,$abstract:ie,$virtual:ae,$override:le,$sealed:pe,$private:ce,$privateSet:ue,$protected:de,$protectedSet:fe,$readonly:ve,$async:me}=p,{$enumerate:he,$dispose:ye,$post:$e,$on:ge,$timer:be,$type:we,$args:Ae,$inject:Se,$resource:xe,$asset:Oe,$singleton:je,$serialize:Ee,$deprecate:Re,$session:Te,$state:ke,$conditional:Be,$noserialize:Fe,$ns:Me}=p;let qe=JSON.parse('{"envVars":[],"envVarsloadOptions":{"overwrite":true},"mounts":{"main":"/"},"main-appSettings":[{"name":"case sensitive routing","value":false},{"name":"strict routing","value":false}],"main-middlewares":[],"main-resHeaders":[],"server-http":{"enable":false,"port":80,"timeout":-1},"server-https":{"enable":false,"port":443,"timeout":-1,"privateKey":"","publicCert":""}}'),He=e.Port("settingsReader");if("function"==typeof He){let e=He("flair.server");e&&(qe=Object.assign(qe,e))}qe=Object.freeze(qe),e.AppDomain.context.current().currentAssemblyBeingLoaded("./flair.server{.min}.js"),(async()=>{const{Bootware:e}=H();p("sealed"),p("ns","flair.bw.server"),r("Middlewares",e,function(){p("override"),this.construct=(e=>{e("Express Middlewares",!0)}),p("override"),this.boot=(async e=>{let r=qe[`${e.name}-middlewares`];if(r&&r.length>0){let t=null,s=null;for(let n of r)if(n.module)try{t=require(n.name),s=n.func?t[n.func]:t;let r=[],o=null;n.args=n.args||[];for(let e of n.args){if("string"==typeof e&&e.startsWith("return "))o=new Function(e)();else if("object"==typeof e)for(let r in e)e.hasOwnProperty(r)&&"string"==typeof(o=e[r])&&o.startsWith("return ")&&(o=new Function(e)(),e[r]=o);else o=e;r.push(o)}e.app.use(s(...r))}catch(e){throw P.OperationFailed(`Middleware ${n.module} load failed.`,e,this.boot)}}})})})(),(async()=>{const e=require("node-env-file"),{Bootware:t}=H();p("sealed"),p("ns","flair.bw.server"),r("NodeEnv",t,function(){p("override"),this.construct=(e=>{e("Node Server Environment")}),p("override"),this.boot=(async()=>{if(qe.envVars.length>0)for(let r of qe.envVars)e(r,qe.envVarsLoadOptions)})})})(),(async()=>{const{Bootware:e}=H();p("sealed"),p("ns","flair.bw.server"),r("ResHeaders",e,function(){p("override"),this.construct=(e=>{e("Server Response Headers",!0)}),p("override"),this.boot=(async e=>{let r=qe[`${e.name}-resHeaders`];r&&r.length>0&&e.app.use((e,t,s)=>{for(let e of r)t.setHeader(e.name,e.value);s()})})})})(),(async()=>{const{Bootware:e}=H();p("sealed"),p("ns","flair.bw.server"),r("Router",e,function(){let e=null;p("override"),this.construct=(e=>{e("Server Router",!0)}),p("override"),this.boot=(async r=>{e||(e=a.context.current().allRoutes(!0)).sort((e,r)=>e.index<r.index?-1:e.index>r.index?1:0);let t=null,s=!1;for(let n of e)n.mount===r.name&&(r.app[n.verb]=(n.path,(e,r,o)=>{const i=e=>{e?r.end():o()},l=e=>{r.status(500).end(),a.app().onError(e)};t=new n.Handler;try{"function"==typeof(s=t[n.verb](e,r)).then?s.then(e=>{i(e)}).catch(l):i(s)}catch(e){l(e)}}))})})})(),(async()=>{const{App:e}=H("flair.boot");p("ns","flair.server"),r("App",e,function(){})})(),(async()=>{const e=require("express"),t=require("fs"),s=require("http"),n=require("https"),o=require("http-shutdown"),{ServerHost:i}=H("flair.boot");p("sealed"),p("ns","flair.server"),r("Server",i,function(){let r={},i=null,l=null,c=qe["server-https"],u=qe["server-http"];p("override"),this.construct=(e=>{e("Express","4.x")}),this.app=(()=>this.mounts["main"]),this.mounts={get:()=>r,set:W},p("override"),this.boot=(async t=>{t();const s=(e,r)=>{let t=qe[`${e}-appSettings`];if(t&&t.length>0)for(let e of t)r.set(e.name,e.value)};let n=e();s("main",n);let o="",i=null;for(let t of Object.keys(qe.mounts))"main"===t?(o="/",i=n):(o=qe.mounts[t],i=e()),r[t]=Object.freeze({name:t,root:o,app:i}),"main"!==t&&(s(t,i),n.use(o,i));r=Object.freeze(r)}),p("override"),this.start=(async e=>{if(e(),u.enable&&(i=s.createServer(this.app()),(i=o(i)).on("error",a.app().onError),-1!==u.timeout&&(i.timeout=u.timeout)),c.enable){const e=t.readFileSync(c.privateKey,"utf8"),r=t.readFileSync(c.publicCert,"utf8"),s={key:e,cert:r};l=n.createServer(s,this.app()),(l=o(l)).on("error",a.app().onError),-1!==c.timeout&&(l.timeout=c.timeout)}}),p("override"),this.stop=(async e=>{e(),i&&(console.log("http server is shutting down..."),i.shutdown(()=>{i=null,console.log("http server is cleanly shutdown!")})),l&&(console.log("https server is shutting down..."),l.shutdown(()=>{l=null,console.log("https server is cleanly shutdown!")}))}),p("override"),this.ready=(async e=>{e();let r=u.port||80,t=process.env.PORT||c.port||443;i&&l?i.listen(r,()=>{i.listen(t,()=>{console.log(`${a.app().info.name}, v${a.app().info.version} (http: ${r}, https: ${t})`)})}):i?i.listen(r,()=>{console.log(`${a.app().info.name}, v${a.app().info.version} (http: ${r})`)}):l?l.listen(t,()=>{console.log(`${a.app().info.name}, v${a.app().info.version} (https: ${t})`)}):console.log(`${a.app().info.name}, v${a.app().info.version}`)}),p("override"),this.dispose=(e=>{e(),r=null})})})(),(async()=>{const{App:e}=H("flair.boot");p("ns","flair.server"),r("WorkerApp",e,function(){})})(),e.AppDomain.context.current().currentAssemblyBeingLoaded(""),e.AppDomain.registerAdo('{"name":"flair.server","file":"./flair.server{.min}.js","desc":"True Object Oriented JavaScript","title":"Flair.js","version":"0.25.53","lupdate":"Sun, 17 Mar 2019 20:42:37 GMT","builder":{"name":"<<name>>","version":"<<version>>","format":"fasm","formatVersion":"1","contains":["initializer","types","enclosureVars","enclosedTypes","resources","assets","routes","selfreg"]},"copyright":"(c) 2017-2019 Vikas Burman","license":"MIT","types":["flair.bw.server.Middlewares","flair.bw.server.NodeEnv","flair.bw.server.ResHeaders","flair.bw.server.Router","flair.server.App","flair.server.Server","flair.server.WorkerApp"],"resources":[],"assets":[],"routes":[]}')})();
//# sourceMappingURL=./flair.server.min.js.map
/**
 * oojs.js
 * version 1.0.0
 * (C) 2017, Vikas Burman
 * MIT License 
 */
(function(){const oojs=env=>{let catalog=[],oops=function(match,Advise){catalog.push({match:match,Advise:Advise})};return oops.Class=((name,inherits,factory)=>{"function"!=typeof factory&&(factory=inherits,inherits=null);const Noop=function(targetType,targetName,target,obj){},ASync=function(targetType,targetName,target,obj){if("func"!==targetType)throw`ASync attribute can only be applied to functions. ${targetName} is not a function.`;if("_constructor"===targetName)throw`ASync attribute cannot be applied on constructor.`;if("_dispose"===targetName)throw`ASync attribute cannot be applied on dispose.`;Object.defineProperty(obj,targetName,{value:function(...args){return new Promise((resolve,reject)=>{target(resolve,reject,...args)})}.bind(obj)})},Deprecate=function(targetType,targetName,target,obj){if("_constructor"===targetName)throw`Deprecate attribute cannot be applied on constructor.`;if("_dispose"===targetName)throw`Deprecate attribute cannot be applied on dispose.`;switch(targetType){case"prop":let desc=Object.getOwnPropertyDescriptor(obj,targetName);if(desc.get){let _get=desc.get;Object.defineProperty(obj,targetName,{get:function(){return console.warn(`${targetName} is deprecated.`),_get()}.bind(obj)})}if(desc.set){let _set=desc.set;Object.defineProperty(obj,targetName,{set:function(value){return console.warn(`${targetName} is deprecated.`),_set(value)}.bind(obj)})}break;case"func":Object.defineProperty(obj,targetName,{value:function(...args){console.warn(`${targetName} is deprecated.`),target(...args)}.bind(obj)})}},Skip=function(targetType,targetName,target,obj){if("_constructor"===targetName)throw`Skip attribute cannot be applied on constructor.`;if("_dispose"===targetName)throw`Skip attribute cannot be applied on dispose.`;Object.defineProperty(obj,targetName,{enumerable:!1})},Inject=function(targetType,targetName,target,obj,injectType,...typeArgs){if("func"!==targetType)throw`Inject attribute can only be applied to functions. ${targetName} is not a function.`;if("_constructor"===targetName)throw`Inject attribute cannot be applied on constructor.`;if("_dispose"===targetName)throw`Inject attribute cannot be applied on dispose.`;Object.defineProperty(obj,targetName,{value:function(...args){let instance=new injectType(...typeArgs);target(instance,...args)}.bind(obj)})},MultiInject=function(targetType,targetName,target,obj,...injections){if("func"!==targetType)throw`Inject attribute can only be applied to functions. ${targetName} is not a function.`;if("_constructor"===targetName)throw`Inject attribute cannot be applied on constructor.`;if("_dispose"===targetName)throw`Inject attribute cannot be applied on dispose.`;Object.defineProperty(obj,targetName,{value:function(...args){let instances=[],_type=null,_args=null;for(_inject of injections)_type=_inject.type,_args=_inject.args||[],instances.push(new _type(..._args));let InstancesAndFuncArgs=instances.concat(args);target(...InstancesAndFuncArgs)}.bind(obj)})};let Class=function(...args){let Parent=Class.Inherits,_this={},bucket=[],meta={},props={},events=[];if(Parent&&(_this=new Parent(...args),Object.isFrozen(_this)))throw`${name} cannot inherit from a sealed class.`;const getAttr=attr=>{let Attr=null;switch(attr){case"ASync":Attr=ASync;break;case"Deprecate":Attr=Deprecate;break;case"Skip":Attr=Skip;break;case"Inject":Attr=Inject;break;case"MultiInject":Attr=MultiInject;break;default:Attr=Noop}return Attr},applyAttr=targetName=>{let _Attr=null,targetType=meta[targetName].type,attrArgs=null;for(let info of meta[targetName])_Attr=info.Attr,attrArgs=info.args||[],new _Attr(targetType,targetName,_this[targetName],_this,...attrArgs)},hasAttr=(attrName,meta)=>{let has=!1;for(let info of meta)if(info.name===attrName){has=!0;break}return has};if(_this.attr=((attr,...args)=>{"string"==typeof attr?bucket.push({name:attr,Attr:getAttr(attr),args:args}):bucket.push({name:attr.name,Attr:attr,args:args})}),_this.func=((name,fn)=>{"constructor"===name&&(name="_"+name),"dispose"===name&&(name="_"+name),meta[name]=[].concat(bucket),meta[name].type="func",bucket=[];meta[name];if(hasAttr("Override",meta[name])){let desc=Object.getOwnPropertyDescriptor(_this,name);if("function"!=typeof desc.value)throw`${name} is not a function to override.`;if(!desc.configurable)throw`${name} cannot override a sealed function.`;let base=_this[name].bind(_this);Object.defineProperty(_this,name,{value:function(...args){return fn(base,...args)}.bind(_this)})}else{if(_this[name])throw`${name} already defined.`;Object.defineProperty(_this,name,{configurable:!0,enumerable:!0,writable:!1,value:fn})}applyAttr(name)}),_this.prop=((name,valueOrGetter,setter)=>{if("constructor"===name)throw`${name} can only be defined as a function.`;if("dispose"===name)throw`${name} can only be defined as a function.`;meta[name]=[].concat(bucket),meta[name].type="prop",bucket=[];let attrs=meta[name];if(hasAttr("Override",meta[name])){let desc=Object.getOwnPropertyDescriptor(_this,name);if("function"!=typeof desc.get)throw`${name} is not a property to override.`;if(!desc.configurable)throw`${name} cannot override a sealed property.`}else if(_this[name])throw`${name} already defined.`;if("function"!=typeof valueOrGetter){let prop=props[name]=valueOrGetter;Object.defineProperty(_this,name,{__proto__:null,configurable:!0,enumerable:!0,get:()=>{return prop},set:hasAttr("ReadOnly",attrs)?value=>{throw`${name} is readonly.`}:value=>{prop=value}})}else Object.defineProperty(_this,name,{__proto__:null,configurable:!0,enumerable:!0,get:valueOrGetter,set:hasAttr("ReadOnly",attrs)?value=>{throw`${name} is readonly.`}:value=>{"function"==typeof setter&&setter(value)}});applyAttr(name)}),_this.event=(name=>{if("constructor"===name)throw`${name} can only be defined as a function.`;if("dispose"===name)throw`${name} can only be defined as a function.`;meta[name]=[],meta[name].type="event",bucket.length>0&&(console.warn(`Attributes can only be applied to properties or functions. ${name} is an event.`),bucket=[]);let _event=(...args)=>{let e={name:name,args:args,stop:!1};for(let handler of events)if(handler(e),e.stop)break};_event.Name=name,_event.subscribe=(fn=>{events.push(fn)}),_event.unsubscribe=(fn=>{let index=events.indexOf(fn);index!==-1&&events.splice(index,1)}),Object.defineProperty(_this,name,{configurable:!1,enumerable:!1,value:_event,writable:!1})}),factory.apply(_this),_this._=_this._||{},_this._.instanceOf=_this._.instanceOf||[],Parent||_this._.instanceOf.push({name:"Object",type:Object,meta:[]}),_this._.instanceOf.push({name:name,type:Class,meta:meta}),_this._.Inherits=Class,"function"==typeof _this._constructor&&(_this._constructor(...args),delete _this._constructor),delete _this.attr,delete _this.func,delete _this.prop,"function"==typeof _this._dispose){_this._.dispose=_this._.dispose||[];let dispose=_this._dispose;_this._.dispose.push(dispose),delete _this._dispose}weave(_this);for(let member in meta)if(meta.hasOwnProperty(member)&&hasAttr("Seal",meta[member]))switch(meta[member].type){case"prop":Object.defineProperty(_this,member,{configurable:!1});break;case"func":"_constructor"===member?_this=Object.freeze(_this):Object.defineProperty(_this,member,{configurable:!1})}return _this};return Class.Inherits=inherits,Class.Name=name,Class}),oops.using=((obj,where)=>{try{where(obj)}finally{if(obj._&&obj._.dispose.length>0){obj._.dispose.reverse();for(let dispose of obj._.dispose)dispose()}}}),env&&(env.Class=oops.Class,env.using=oops.using),Object.freeze(oops)};"object"==typeof("undefined"!=typeof module&&null!==module?module.exports:void 0)?module.exports=oojs:"function"==typeof define&&define.amd?define(function(){return oojs}):this.oojs=oojs}).call(this);
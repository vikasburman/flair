

In GearsJS
publish attr should publish event outside to pub/sub
handle attr should subscribe to an external channel on pub/sub -- and when handle is used, it should mandate using IDisposable, and at the time of dispose, should automatically clear pub/sub handlers
and also on such methods add a stop() function on the function, to let user stop handling any further and a start() function to start handling again
fetch attribute should make a service call


 In reflector, for Assembly, Namespace, etc. as sub of struct, check for these and then give specialized refleccor
 thee reflector should inherit from struct reflector

revisit all ._ to see what all needs to be freezed

Reflector should be revisited for all changes and types

const Class = flair.Class;
const Model = await flair('name.one.two');
const $$ = flair.attr;

const MyClass = Class('myNamespace.MyClass', Model, function() {

    $$('event');
    this.abc = (def1, def2) => {}
    
    
});
